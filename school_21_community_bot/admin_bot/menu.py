import logging

from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
    Update,
)
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
)

from admin_bot.conversation import (
    ADMIN_MENU,
    MAIN_ADMIN_MENU,
    USER_ADD_FULL_NAME,
    USER_MENU,
)
from admin_bot.decorators import admin_only
from admin_bot.level import show_levels
from admin_bot.metrics import export_metrics
from admin_bot.role import show_roles
from admin_bot.user import show_users
from admin_bot.utils import main_admin_menu, send_message

logger = logging.getLogger(__name__)


@admin_only
async def start_admin(
    update: Update, context: ContextTypes.DEFAULT_TYPE
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    """
    try:
        menu_button = KeyboardButton("üçî –ú–µ–Ω—é")
        custom_keyboard = ReplyKeyboardMarkup(
            [[menu_button]],
            resize_keyboard=True,
            one_time_keyboard=False,
        )

        await send_message(
            update,
            context,
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üçî –ú–µ–Ω—é, "
            "—á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.",
            reply_markup=custom_keyboard,
        )
        return ADMIN_MENU
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start_admin: {e}")
        await send_message(
            update, context, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."
        )
        return ConversationHandler.END


@admin_only
async def admin_menu_handler(
    update: Update, context: ContextTypes.DEFAULT_TYPE
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """
    query = update.callback_query
    if query:
        await query.answer()
        data = query.data
    else:
        data = update.message.text

    if data == "üçî –ú–µ–Ω—é":
        return await main_admin_menu(update, context)
    elif data == "users":
        return await user_menu(update, context)
    elif data == "roles":
        return await show_roles(update, context, page=0)
    elif data == "levels":
        return await show_levels(update, context, page=0)
    elif data == "metrics":
        return await export_metrics(update, context)
    elif data == "close_menu":
        await send_message(
            update,
            context,
            "–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ.",
        )
        return ConversationHandler.END
    else:
        if query:
            await query.edit_message_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
        else:
            await send_message(update, context, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
        return MAIN_ADMIN_MENU


@admin_only
async def user_menu(
    update: Update, context: ContextTypes.DEFAULT_TYPE
):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
    """
    try:
        keyboard = [
            [
                InlineKeyboardButton(
                    "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                    callback_data="list_users"
                )
            ],
            [
                InlineKeyboardButton(
                    "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="add_user"
                )
            ],
            [
                InlineKeyboardButton(
                    "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="delete_user"
                )
            ],
            [
                InlineKeyboardButton(
                    "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="edit_user"
                )
            ],
            [
                InlineKeyboardButton(
                    "–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="search_users"
                )
            ],
            [
                InlineKeyboardButton(
                    "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_admin_menu"
                )
            ],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        if update.callback_query:
            await update.callback_query.edit_message_text(
                "–ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", reply_markup=reply_markup
            )
        else:
            await update.message.reply_text(
                "–ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", reply_markup=reply_markup
            )
        return USER_MENU
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ user_menu: {e}")
        await send_message(
            update,
            context,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
        )
        return ConversationHandler.END


@admin_only
async def user_menu_handler(
    update: Update, context: ContextTypes.DEFAULT_TYPE
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    query = update.callback_query
    if query:
        await query.answer()
        data = query.data
    else:
        data = update.message.text

    if data == "list_users":
        return await show_users(update, context, page=0)
    elif data == "add_user":
        await send_message(update, context, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        return USER_ADD_FULL_NAME
    elif data == "delete_user":
        return await show_users(update, context, page=0, action="delete")
    elif data == "edit_user":
        return await show_users(update, context, page=0, action="edit")
    elif data == "search_users":
        from admin_bot.search import search_menu
        return await search_menu(update, context)
    elif data == "back_to_admin_menu":
        return await main_admin_menu(update, context)
    elif data == "üçî –ú–µ–Ω—é":
        return await main_admin_menu(update, context)
    elif data == "close_menu":
        await send_message(
            update,
            context,
            "–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ.",
        )
        return ConversationHandler.END
    else:
        if query:
            await query.edit_message_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
        else:
            await send_message(update, context, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
        return USER_MENU
